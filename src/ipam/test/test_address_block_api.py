# coding: utf-8

"""
    IP Address Management API

    The IPAM/DHCP Application is a BloxOne DDI service providing IP address management and DHCP protocol features. The IPAM component provides visibility into and provisioning tools to manage networking spaces, monitoring and reporting of entire IP address infrastructures, and integration with DNS and DHCP protocols. The DHCP component provides DHCP protocol configuration service with on-prem host serving DHCP protocol. It is part of the full-featured, DDI cloud solution that enables customers to deploy large numbers of protocol servers to deliver DNS and DHCP throughout their enterprise network.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest

from ipam.api.address_block_api import AddressBlockApi


class TestAddressBlockApi(unittest.TestCase):
    """AddressBlockApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AddressBlockApi()

    def tearDown(self) -> None:
        pass

    def test_Copy(self) -> None:
        """Test case for Copy

        Copy the address block.
        """
        pass

    def test_Create(self) -> None:
        """Test case for Create

        Create the address block.
        """
        pass

    def test_CreateNextAvailableAB(self) -> None:
        """Test case for CreateNextAvailableAB

        Create the Next Available Address Block object.
        """
        pass

    def test_CreateNextAvailableIP(self) -> None:
        """Test case for CreateNextAvailableIP

        Allocate the next available IP address.
        """
        pass

    def test_CreateNextAvailableSubnet(self) -> None:
        """Test case for CreateNextAvailableSubnet

        Create the Next Available Subnet object.
        """
        pass

    def test_Delete(self) -> None:
        """Test case for Delete

        Move the address block to the recycle bin.
        """
        pass

    def test_List(self) -> None:
        """Test case for List

        Retrieve the address blocks.
        """
        pass

    def test_ListNextAvailableAB(self) -> None:
        """Test case for ListNextAvailableAB

        List Next Available Address Block objects.
        """
        pass

    def test_ListNextAvailableIP(self) -> None:
        """Test case for ListNextAvailableIP

        Retrieve the next available IP address.
        """
        pass

    def test_ListNextAvailableSubnet(self) -> None:
        """Test case for ListNextAvailableSubnet

        List Next Available Subnet objects.
        """
        pass

    def test_Read(self) -> None:
        """Test case for Read

        Retrieve the address block.
        """
        pass

    def test_Update(self) -> None:
        """Test case for Update

        Update the address block.
        """
        pass


if __name__ == '__main__':
    unittest.main()
